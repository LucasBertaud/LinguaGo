// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  pseudo       String
  email        String        @unique
  password     String
  role         Role          @default(USER)
  createdAt    DateTime      @default(now())
  refreshTokens RefreshToken[]
}

model RefreshToken {
  id        String    @id @default(uuid())
  token     String
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
  expiresAt DateTime
}

model Level {  
  id              Int               @default(autoincrement()) @id
  title           LevelEnum
  subtitle        String
  description     String?
  winablePoints   Int               @default(0)
  exercisesSeries ExercisesSerie[]
}

model ExercisesSerie {
  id          Int         @default(autoincrement()) @id
  title       String
  description String?
  exercises   Exercise[]
  createdAt   DateTime    @default(now())
  level       Level      @relation(fields: [levelId], references: [id])
  levelId     Int
}

model Exercise {
  id          Int             @default(autoincrement()) @id
  question    String
  answer      String
  choices     String[]
  type        ExerciseType
  serie       ExercisesSerie  @relation(fields: [serieId], references: [id]) 
  serieId     Int
}

enum Role {
  USER
  ADMIN
}

enum LevelEnum {
  A1
  A2
  B1
  B2
  C1
}

enum ExerciseType {
  MULTIPLE_CHOICE
  TRANSLATION
  TRUE_FALSE
}